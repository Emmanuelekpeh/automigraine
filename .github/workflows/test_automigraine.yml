name: Test AutoMigraine Components

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov httpx pyyaml
          pip install -r requirements.txt
          
      - name: Run unit tests
        run: |
          pytest tests/unit --cov=core --cov-report=xml
          
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio httpx pyyaml
          pip install -r requirements.txt
          
      - name: Run integration tests with mock LLMs
        run: |
          pytest tests/integration --junitxml=integration-results.xml
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: integration-results.xml

  model-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run model tests
        run: python tests/model_tests.py
        env:
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
